Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _jsxFileName = '/home/dvk/nativeapp/twitterclone/App.js';

var _expo = require('expo');

var _expo2 = _interopRequireDefault(_expo);

var _reactNative = require('react-native');

var _reactNavigation = require('react-navigation');

var _Ionicons = require('@expo/vector-icons/Ionicons');

var _Ionicons2 = _interopRequireDefault(_Ionicons);

var _MainDraw = require('./appres/MainDraw');

var _MainDraw2 = _interopRequireDefault(_MainDraw);

var _Sidebar = require('./appres/Sidebar');

var _Sidebar2 = _interopRequireDefault(_Sidebar);

var _Searchscreen = require('./appres/Searchscreen');

var _Searchscreen2 = _interopRequireDefault(_Searchscreen);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  App: {
    displayName: 'App'
  }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/home/dvk/nativeapp/twitterclone/App.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
  };
}

var HomeScreenRouter = (0, _reactNavigation.DrawerNavigator)({
  Home: { screen: _MainDraw2.default },
  Search: {
    screen: _Searchscreen2.default,
    navigationOptions: {
      header: null
    }
  }
}, {
  contentComponent: function contentComponent(props) {
    return _react3.default.createElement(_Sidebar2.default, _extends({}, props, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 20
      }
    }));
  }
});

var App = _wrapComponent('App')(function (_Component) {
  _inherits(App, _Component);

  function App() {
    _classCallCheck(this, App);

    var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this));

    _this.state = {
      isReady: false
    };
    return _this;
  }

  _createClass(App, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      return regeneratorRuntime.async(function componentWillMount$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return regeneratorRuntime.awrap(_expo2.default.Font.loadAsync({
                Roboto: require('native-base/Fonts/Roboto.ttf'),
                Roboto_medium: require('native-base/Fonts/Roboto_medium.ttf')
              }));

            case 2:
              this.setState({ isReady: true });

            case 3:
            case 'end':
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: 'render',
    value: function render() {
      if (!this.state.isReady) {
        return _react3.default.createElement(_expo2.default.AppLoading, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 39
          }
        });
      }
      return _react3.default.createElement(HomeScreenRouter, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 41
        }
      });
    }
  }]);

  return App;
}(_react2.Component));

exports.default = App;